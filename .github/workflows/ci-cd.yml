name: CI Pipeline

on:
  push:
    branches:
      - develop
      - staging
      - main
  pull_request:
    branches:
      - develop
      - staging
      - main
  workflow_dispatch:

jobs:
  build-and-test-develop:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Black (Formatter)
        run: black app --check

      - name: Run Pylint (Linter)
        run: pylint app --output-format=text --fail-under=9 > pylint-report.txt || true

      - name: Run Flake8 (Linter)
        run: flake8 app --output-file=flake8-report.txt || true

      - name: Run Unit Tests
        run: |
          pytest --ignore=tests/test_acceptance_app.py --ignore=tests/test_smoke_app.py

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: develop-test-reports
          path: |
            htmlcov/
            report.html

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-test-staging:
    if: github.ref == 'refs/heads/staging'
    needs: build-and-test-develop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Acceptance Tests
        env:
          APP_BASE_URL: http://localhost:8000
        run: |
          gunicorn --workers=2 --bind=0.0.0.0:8000 app.app:app &
          sleep 10
          pytest tests/test_acceptance_app.py --cov-report=xml:acceptance_coverage.xml --html=acceptance_report.html

      - name: Upload Acceptance Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: staging-test-reports
          path: |
            htmlcov/
            acceptance_report.html

  deploy-main:
    if: github.ref == 'refs/heads/main'
    needs: build-and-test-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
